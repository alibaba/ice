<% if(!hasJsxRuntime) { %>
  import * as React from 'react';
<% } %>
import { FC, createContext, useState, useContext } from 'react';
import { ContextType, AuthType, IAuth } from './types'

const Context = createContext<any>(null);

interface Props {
  value: AuthType
}

const Provider: FC<Props> = ({ value = {}, children }) => {
  const share = useState<AuthType>(value);
  return (
    <Context.Provider value={share}>{children}</Context.Provider>
  );
};

const useAuth = (): ContextType => {
  const value = useContext(Context);
  return value;
};

// class 组件支持 Hoc 用法
function withAuth(Component) {
  const AuthWrapped = props => {
    const [auth, setAuth] = useAuth();
    return <Component {...Object.assign({}, props, { auth, setAuth })} />;
  };
  return AuthWrapped;
}

export {
  useAuth,
  withAuth,
  Provider,

  IAuth
};
