{
  "baseAdapter.configuration.entry.label": "Entry File",
  "baseAdapter.configuration.entry.des": "Use src/index.js by default",
  "baseAdapter.configuration.outputDir.label": "Output Directory",
  "baseAdapter.configuration.outputDir.des": "The directory where build files are stored",
  "baseAdapter.configuration.publicPath.label": "Public Path",
  "baseAdapter.configuration.publicPath.des": "Specifies a base path for all resources in the project. Works when running build",
  "baseAdapter.configuration.devPublicPath.label": "Public Path for Dev",
  "baseAdapter.configuration.devPublicPath.des": "Specifies a base path for all resources in the project. Works when running dev",
  "baseAdapter.configuration.injectBabel.label": "Babel Environment",
  "baseAdapter.configuration.injectBabel.des": "Inject @babel/polyfill by default",
  "baseAdapter.configuration.hash.label": "Hash",
  "baseAdapter.configuration.hash.des": "Build files will have hash tag when this is turned on",
  "baseAdapter.configuration.minify.label": "Minify",
  "baseAdapter.configuration.minify.des": "Minify build files",
  "baseAdapter.configuration.vendor.label": "Vendor",
  "baseAdapter.configuration.vendor.des": "Create a separate file, consisting of common code shared between build files",
  "vueAdapter.configuration.outputDir.label": "Output Directory",
  "vueAdapter.configuration.outputDir.des": "The directory where build files are stored",
  "vueAdapter.configuration.publicPath.label": "Public Path",
  "vueAdapter.configuration.publicPath.des": "Specifies a base path for all resources in the project. Works when running build",
  "vueAdapter.configuration.filenameHashing.label": "Hash",
  "vueAdapter.configuration.filenameHashing.des": "Build files will have hash tag when this is turned on",

  "baseAdapter.dependency.reset.clearWait": "Cleaning up the node_modules directory, please wait",
  "baseAdapter.dependency.reset.clearDone": "The node_modules directory has been cleaned up",
  "baseAdapter.dependency.reset.startInstall": "Installing dependencies...",
  "baseAdapter.dependency.upgrade.startUpgrade": "Updating dependencies: {packageName}...",

  "baseAdapter.layout.defaultTitle": "Custom layout",
  "baseAdapter.layout.defaultDes": "Custom layout - {name}",

  "baseAdapter.oss.upload.dirEmptyError": "Build directory: {buildDir} does not exist {buildDir}",
  "baseAdapter.oss.upload.buildEmptyError": "Current build result is empty, please build first",


  "baseAdapter.page.create.createMenu": "Create page directory...",
  "baseAdapter.page.create.download": "Downloading block...",
  "baseAdapter.page.create.installDep": "Installing dependencies of the block...",
  "baseAdapter.page.create.createFile": "Creating page file...",
  "baseAdapter.page.download.requestError": "Request tarball package failed",
  "baseAdapter.page.download.tarError": "Unpacking block {blockName} error, URL is {tarballURL}, please try again",
  "baseAdapter.page.download.tarTimeOut": "Unpacking block {blockName} timed out, URL is {tarballURL}, please try again",

  "baseAdapter.task.runing": "The task has started. Please stop the task before trying again",
  "baseAdapter.task.install.dependency": "Please try again after installing the dependency",
  "baseAdapter.task.dev.port.label": "Service port number",
  "baseAdapter.task.dev.host.label": "Service host name",
  "baseAdapter.task.dev.https.label": "Use https",
  "baseAdapter.task.dev.analyzer.label": "Build analysis",
  "baseAdapter.task.dev.disabled-reload.label": "Hot update",
  "vueAdapter.task.dev.port.label": "Service port number",
  "vueAdapter.task.dev.host.label": "Service host name",
  "vueAdapter.task.dev.https.label": "Use https",
  "baseAdapter.task.build.outputDir.label": "Output Directory",
  "baseAdapter.task.build.minify.label": "Minify",
  "baseAdapter.task.build.hash.label": "Hash",
  "vueAdapter.task.build.outputDir.label": "Output Directory",
  "vueAdapter.task.build.publicPath.label": "public Directory",
  "vueAdapter.task.build.filenameHashing.label": "hash",

  "baseAdapter.config.Guide.title": "Guide",
  "baseAdapter.config.Guide.des": "The basic usage of iceworks.",
  "baseAdapter.config.Layout.title": "Layout",
  "baseAdapter.config.Layout.des": "All layouts in the layouts directory of the current project.",
  "baseAdapter.config.Page.title": "Page",
  "baseAdapter.config.Page.des": "All pages in the pages directory of the current project. Support downloading blocks for existing pages",
  "baseAdapter.config.Router.title": "Router",
  "baseAdapter.config.Router.des": "Show all routes in the project, support the addition, deletion and modification of routes.",
  "baseAdapter.config.Menu.title": "Menu",
  "baseAdapter.config.Menu.des": "Show all menus in the project, support the addition, deletion and modification of the menu.",
  "baseAdapter.config.QuickDev.title": "Start Task",
  "baseAdapter.config.QuickDev.des": "Quick start project server for development environment.",
  "baseAdapter.config.QuickBuild.title": "Build Task",
  "baseAdapter.config.QuickBuild.des": "Quick build project static resources for production environments.",
  "baseAdapter.config.Git.title": "Git",
  "baseAdapter.config.Git.des": "Remote git repository for the current project.",
  "baseAdapter.config.OSS.title": "Aliyun OSS",
  "baseAdapter.config.OSS.des": "Upload the build results to Aliyun OSS.",
  "baseAdapter.config.DEF.title": "DEF",
  "baseAdapter.config.DEF.des": "Support DEF release process",
  "baseAdapter.config.Todo.title": "TODO",
  "baseAdapter.config.Todo.des": "Show all comment that need to be processed, such as TODO, FIXME, HACK, etc. in the project code.",
  "baseAdapter.config.Dependency.title": "Dependency",
  "baseAdapter.config.Dependency.des": "Show all dependencies in the project, support quick installation and quick updates",
  "baseAdapter.config.Task.title": "Task",
  "baseAdapter.config.Task.des": "Engineering related tasks.",
  "baseAdapter.config.Configuration.title": "Configuration",
  "baseAdapter.config.Configuration.des": "Engineering related configurations"
}
