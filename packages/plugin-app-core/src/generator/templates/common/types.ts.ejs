<% if (isReact) {%>
  import React, { ReactElement as FrameworkElement, ComponentType as FrameworkComponentType, ReactNode as FrameworkNode } from 'react';
<% } %>

<% if (isRax) {%>
  import { RaxElement as FrameworkElement, ComponentType as FrameworkComponentType, RaxNode as FrameworkNode } from 'rax';
<% } %>

<%- appConfigTypesImports %>
<%- appConfigAppTypesImports %>
<%- typesImports %>

interface IOnTabItemClickParams {
  from: string;
  path: string;
  text: string;
  index: number;
}

export interface IApp {
  rootId?: string;
  mountNode?: HTMLElement;
  addProvider?: ({ children }: { children: FrameworkNode }) => FrameworkElement;
  getInitialData?: () => Promise<any>;
  ErrorBoundaryFallback?: (error: any) => FrameworkComponentType,
  onErrorBoundaryHander?: (error: Error, componentStack: string) => any;
  onLaunch?: () => any;
  onShow?: () => any;
  onHide?: () => any;
  onError?: (error: Error) => any;
  onTabItemClick?: ({ from, path, text, index }: IOnTabItemClickParams) => any;
  <% if (appConfigAppTypesImports) { %>
    <%- appConfigAppTypesExports %>
  <% } %>
  [key: string]: any;
}

<% if (appConfigTypesImports) { %>
  export interface IAppConfig {
    app?: IApp
    <%- appConfigTypesExports %>
  }
<% } %>

declare global {
  interface Window {
    __ICE_SSR_ENABLED__: any;
    __ICE_APP_DATA__: any;
    __ICE_PAGE_PROPS__: any;
  }
}
