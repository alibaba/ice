import { createElement, useEffect } from '<%- framework %>';
<% if(isRax){ %>
  import { withRouter as defaultWithRouter } from 'rax-use-router';
<% } else { %>
  import { withRouter as defaultWithRouter } from 'react-router';
<% } %>
import createShareAPI from 'create-app-shared';
import loadRuntimeModules from './loadRuntimeModules';
import loadStaticModules from './loadStaticModules';
import staticConfig from './staticConfig';
import { setAppConfig } from './appConfig';
import ErrorBoundary from './ErrorBoundary';

const {
  createBaseApp,
  withRouter,
  createHistory,
  getHistory,
  emitLifeCycles,
  usePageShow,
  usePageHide,
  withPageLifeCycle,
  pathRedirect,
  registerNativeEventListeners,
  addNativeEventListener,
  removeNativeEventListener,
  useSearchParams,
  withSearchParams
} = createShareAPI({
  createElement,
  useEffect,
  withRouter: defaultWithRouter,
  loadRuntimeModules,
  loadStaticModules
});

function initializeApp(appConfig, renderer) {
  renderer({
    appConfig,
    staticConfig,
    setAppConfig,
    createBaseApp,
    createHistory,
    getHistory,
    emitLifeCycles,
    pathRedirect,
    ErrorBoundary
  })
};

// Public API
export {
  // router api
  withRouter,
  getHistory,
  useSearchParams,
  withSearchParams,

  // LifeCycles api
  usePageShow,
  usePageHide,
  withPageLifeCycle,

  // events api
  registerNativeEventListeners,
  addNativeEventListener,
  removeNativeEventListener,

  // components
  ErrorBoundary,
};

// Private API
export default {
  initializeApp,
  createBaseApp,
  emitLifeCycles
}
