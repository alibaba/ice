<% if(!hasJsxRuntime) { %>
  import * as React from 'react';
<% } %>
import { createContext, useContext, useState } from 'react';
import Cookies from 'universal-cookie';
<% if (i18nRouting !== false) {%>
import { history } from 'create-app-shared';
import getDetectedLocaleFromPathname from './utils/getDetectedLocaleFromPathname';
import { getAppConfig } from '../../core/appConfig';
<% } %>

const cookies = new Cookies();

const LOCALE_COOKIE_KEY = '<%= LOCALE_COOKIE_KEY %>';
const i18nConfig = <%- JSON.stringify(i18nConfig) %>;

const { defaultLocale, locales } = i18nConfig;

const Context = createContext<any>(null);

export const I18nProvider = ({ children }) => {
  const [activeLocale, setActiveLocale] = useState<string>(() => getLocale());

  function setLocale(locale: string) {
    setLocaleToCookies(locale);
    setActiveLocale(locale);
  }

  return (
    <Context.Provider value={[activeLocale, setLocale]}>
      {children}
    </Context.Provider>
  )
}

/**
 * 在组件中获取和修改语言的 Hook
 */
export function useLocale(): [string, React.Dispatch<React.SetStateAction<string>>] {
  return useContext(Context)
}

/**
 * 获取配置的默认语言
 */
export function getDefaultLocale(): string {
  return defaultLocale
}

/**
 * 获取所有配置的国际化语言
 */
export function getAllLocales(): string[] {
  return locales;
}

<% if (i18nRouting !== false) {%>
function getDetectedLocaleFromPath(locales: string[], defaultLocale: string) {
  const appConfig = getAppConfig();
  if (history === null) {
    if (process.env.NODE_ENV !== 'production') {
      console.log('history is null, can\'t get current locale from pathname');
    }
    return;
  }
  const { location: { pathname } } = history;

  return getDetectedLocaleFromPathname({ pathname, locales, defaultLocale, basename: appConfig?.router?.basename });
}
<% } %>

/**
 * 获取当前页面的国际化语言
 */
export function getLocale(): string {
  return (
    <% if (i18nRouting !== false) {%>
    getDetectedLocaleFromPath(locales, defaultLocale) ||
    <% } %>
    cookies.get(LOCALE_COOKIE_KEY) ||
    defaultLocale
  )
}

/**
 * 设置当前国际化语言，修改 cookie 的 <%= LOCALE_COOKIE_KEY %> 值
 */
export function setLocale(locale: string) {
  setLocaleToCookies(locale);
}

function setLocaleToCookies(locale: string) {
  cookies.set(LOCALE_COOKIE_KEY, locale, { path: '/' });
}

export function getLocaleFromCookies() {
  return cookies.get(LOCALE_COOKIE_KEY);
}