import type { AppConfig, RouteConfig as DefaultRouteConfig } from '@ice/runtime';
<%- routeConfigTypes.imports -%>

<% if (routeConfigTypes.imports) {-%>
type ExtendsRouteConfig = <% if (routeConfigTypes.imports) { %><%- routeConfigTypes.exportNames.join(' & ') %><% } %>;
<% } else { -%>
type ExtendsRouteConfig = {};
<% } -%>
type PageConfig = DefaultRouteConfig<ExtendsRouteConfig>;
type PageConfigDefinitionContext<DataType = any> = {
  data?: DataType;
};
type PageConfigDefinition = (context: PageConfigDefinitionContext) => PageConfig;

// Only used for type defination.
export function definePageConfig(pageConfig: PageConfig | PageConfigDefinition): PageConfigDefinition {
  if (typeof pageConfig !== 'function') {
    return () => pageConfig;
  } else {
    return pageConfig;
  }
}

export type {
  AppConfig,
  PageConfig,
  PageConfigDefinition,
};
