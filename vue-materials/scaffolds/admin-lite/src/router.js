import Vue from 'vue';
import Router from 'vue-router';

// 一下部分是由 Iceworks 相关工具自动生成的路由，请勿随意改变，否则可能会出现一些异常情况
// <!-- auto generated routes start -->
import HeaderAsideLayout from './layouts/HeaderAsideLayout';
import Dashboard from './pages/Dashboard';
import NotFound from './pages/NotFound';

const autoGeneratedRoutes = [];

// <!-- auto generated routes end -->

// 将 Iceworks 当前支持的标准 routes 配置转成支持 vue-router 的格式
function vueRoutesAdapter(routeConfig) {
  const routes = [];
  routeConfig.forEach((route) => {
    let currentPath = route.path;
    // vue router 需要 path 第一个为 /
    if (currentPath[0] !== '/') {
      currentPath = `/${currentPath}`;
    }
    const tempRoute = {
      path: currentPath,
      component: route.component,
      children: [],
    };
    if (route.childRoutes && route.childRoutes.length) {
      tempRoute.children = vueRoutesAdapter(route.childRoutes);
    }
    if (route.indexRoute) {
      if (tempRoute.children && tempRoute.children.length === 0) {
        tempRoute.children.unshift({
          path: '',
          component: route.indexRoute.component,
        });
      } else {
        tempRoute.children.routes.unshift({
          path: '',
          component: route.indexRoute.component,
        });
        tempRoute.children = tempRoute.children.routes;
      }
    }
    routes.push(tempRoute);
  });

  return {
    routes,
  };
}

const finalRoutes = vueRoutesAdapter(autoGeneratedRoutes);

// 自定义路由，如果 path 相同则会覆盖自动生成部分的路由配置
const customRoutes = {
  routes: [
    {
      path: '/',
      component: HeaderAsideLayout,
      children: [
        { path: '', component: Dashboard },
      ],
    },
    {
      path: '/404',
      component: HeaderAsideLayout,
      children: [
        { path: '', component: NotFound },
      ],
    },
    { path: '*', redirect: '/404' },
  ],
};

Vue.use(Router);

export default new Router({
  routes: [...finalRoutes.routes, ...customRoutes.routes],
});
